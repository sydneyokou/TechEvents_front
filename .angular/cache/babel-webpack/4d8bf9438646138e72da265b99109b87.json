{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\syokou\\\\OneDrive - Capgemini\\\\Desktop\\\\Projets_\\\\TechEventsProject\\\\TechEvents_front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\syokou\\\\OneDrive - Capgemini\\\\Desktop\\\\Projets_\\\\TechEventsProject\\\\TechEvents_front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { EventService, CreateEventComponent, EventRouteActivator } from \"./events/index\";\nimport { EventsAppComponent } from \"./events-app.component\";\nimport { TOASTR_TOKEN } from \"./common/toastr.service\";\nimport { JQ_TOKEN } from \"./common/jQuery.service\";\nimport { appRoutes } from \"./routes\";\nimport { AuthService } from \"./user/auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport function checkDirtyState(component) {\n  if (component.isDirty) {\n    return window.confirm(\"You have not saved this event, do you really want to cancel ?\");\n  } else {\n    return true;\n  }\n}\nvar toastr = window[\"toastr\"];\nvar jQuery = window[\"$\"];\nexport var AppModule = /*#__PURE__*/(function () {\n  var AppModule = /*#__PURE__*/_createClass(function AppModule() {\n    _classCallCheck(this, AppModule);\n  });\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [EventsAppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [EventService, {\n      provide: TOASTR_TOKEN,\n      useValue: toastr\n    }, {\n      provide: JQ_TOKEN,\n      useValue: jQuery\n    }, EventRouteActivator, {\n      provide: \"canDeactivateCreateEvent\",\n      useValue: checkDirtyState\n    }, AuthService //the detailed equivalent syntax for this would be = {provide: AuthService, useClass: AuthService}\n    // Many services providers exist : useValue, useClass like above.. but also useExisting , useFactory...\n    ],\n    imports: [[BrowserModule, RouterModule.forRoot(appRoutes), FormsModule, ReactiveFormsModule]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}